Q. Write a program in GO language program to create Text file
package main
import (
"fmt"
"os"
)
func main() {
file, err := os.Create("example.txt")
if err != nil {
fmt.Println("Error:", err)
return
}
defer file.Close()
text := "This is a text file created using Go programming language."
_, err = file.WriteString(text)
if err != nil {
fmt.Println("Error:", err)
return
}
fmt.Println("Text file created successfully.")
}

 Write a program in GO language to accept n records of employee
information (eno,ename,salary) and display records of employees
having minimum salary.

package main

import (
	"fmt"
)

type Employee struct {
	Eno    int
	Ename  string
	Salary int
}

func main() {
	var n int
	fmt.Println("Enter the number of employees:")
	fmt.Scanln(&n)

	employees := make([]Employee, n)

	// Input employee details
	for i := 0; i < n; i++ {
		fmt.Printf("\nEnter details for employee %d:\n", i+1)
		fmt.Println("Employee Number:")
		fmt.Scanln(&employees[i].Eno)

		fmt.Println("Employee Name:")
		fmt.Scanln(&employees[i].Ename)

		fmt.Println("Salary:")
		fmt.Scanln(&employees[i].Salary)
	}

	// Find minimum salary
	minSalary := employees[0].Salary
	for i := 1; i < n; i++ {
		if employees[i].Salary < minSalary {
			minSalary = employees[i].Salary
		}
	}

	// Display employees with minimum salary
	fmt.Println("\nEmployees with Minimum Salary:")
	for i := 0; i < n; i++ {
		if employees[i].Salary == minSalary {
			fmt.Printf("Employee Number: %d\n", employees[i].Eno)
			fmt.Printf("Employee Name: %s\n", employees[i].Ename)
			fmt.Printf("Salary: %d\n", employees[i].Salary)
			fmt.Println()
		}
	}
}
